Autenticación vía HTTP
	
	Esta autenticación es la más sencila

	La autenticación vía HTTP tiene dos problemas:

		- Es poco segura: las credenciales se envían en cada request anteponiendo el usuario y contraseña en la url, por ejemplo: user:password@platzi.com.
		- Es ineficiente: la autenticación se debe realizar en cada request.

	Haremos la autenticación de la siguiente manera:
		- curl "http://Armando:1234@localhost:8000/books"

***********************************************************************
Autenticación vía HMAC
	
	Hash Message Authentication Code

	Esta técnca es más segura

	Para esta autenticación necesitamos 3 elementos:

    - Función Hash: Difícil de romper, que sea conocida por el cliente y servidor.
    - Clave secreta: Solamente la pueden saber el cliente y el servidor, será utilizada para corroborar el hash.
    - UID: El id del usuario, será utilizado dentro de la función hash junto con la clave secreta y un timestamp.

	Es mucho más segura que la autenticación vía HTTP, por ello la información que se envía a través de este método no es muy sensible.

	El cliente sabiendo la función de HASH y el el secreto lo concatena en un mensaje y lo envía al servidor, el servidor toma la información y vuelve a generar el HASH, si el HASH generado y recibido son iguales toma correcta la autenticación.

	Usamos el script generate_hash.php para generar los hash's

	Ejecutamos el script y le pasamos el id de usuario:
		- php generate_hash.php 1

	Nos arrojará un HASH y una estampa de tiempo que usariamos para hacer la autenticación.

	Ahora hacemos la petición
		- curl http://localhost:8000/books -H 'X-HASH: NUMEROHASH' -H 'X-UID: 1' -H 'X-TIMESTAMP: MARCADETIEMPO'

***********************************************************************
Autenticación vía Access Tokens
	
	Está forma es la más compleja de todas, pero también es la forma más segura utilizada para información muy sensible. El servidor al que le van a hacer las consultas se va a partir en dos:

	    - Uno se va a encargar específicamente de la autenticación.
	    - El otro se va a encargar de desplegar los recursos de la API.

	El flujo de la petición es la siguiente:

	    - Nuestro usuario hace una petición al servidor de autenticación para pedir un token.
	    - El servidor le devuelve el token.
	    - El usuario hace una petición al servidor para pedir recursos de la API.
	    - El servidor con los recursos hace una petición al servidor de autenticación para verificar que el token sea válido.
	    - Una vez verificado el token, el servidor le devuelve los recursos al cliente.

	El servidor de autenticación esta en:
		- auth_server.php

	Corremos el primer servidor:
		- php -S localhost:8000 router.php

	Corremos otro servidor que es el de autenticación:
		- php -S localhost:8001 auth_server.php

	Ahora generamos el token:
		- curl http://localhost:8001 -X 'POST' -H 'X-Client-Id: 1' -H 'X-Secret:SuperSecreto!'

	Realizamos una segunda llamada al servidor de recursos
		- curl http://localhost:8000/books -H 'X-Token: TOKEN'